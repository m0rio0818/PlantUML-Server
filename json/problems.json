[
    {
        "id": 1,
        "title": "ログインシステム",
        "theme": "シーケンス図",
        "uml":"@startuml\nparticipant User\nparticipant System\nparticipant Database\n\nUser -> System: ログイン\nSystem -> Database: ユーザー認証\nDatabase --> System: 認証成功\nSystem --> User: ログイン成功メッセージ\n\nUser -> System: メッセージ送信\nSystem -> Database: メッセージ保存\nDatabase --> System: メッセージ保存完了\nSystem --> User: 送信成功メッセージ\n\nUser -> System: ログアウト\nSystem -> Database: ログアウト処理\nDatabase --> System: ログアウト処理完了\nSystem --> User: ログアウト成功メッセージ\n@enduml"
    },
    {
        "id": 2,
        "title": "オンラインサイトでの注文のプロセス",
        "theme": "シーケンス図",
        "uml":"@startuml\nactor Customer\nparticipant WebApp\nparticipant PaymentGateway\nparticipant OrderSystem\nparticipant InventorySystem\nparticipant ShippingSystem\n\nCustomer -> WebApp: 商品を選択\nCustomer -> WebApp: カートに追加\nCustomer -> WebApp: 注文を確定\n\nWebApp -> Customer: 注文詳細を表示\nWebApp -> PaymentGateway: 支払い情報を送信\nWebApp -> OrderSystem: 注文を登録\nOrderSystem -> InventorySystem: 在庫を確認\nInventorySystem --> OrderSystem: 在庫情報を提供\nOrderSystem -> ShippingSystem: 出荷指示を送信\nShippingSystem --> OrderSystem: 出荷情報を提供\nOrderSystem --> PaymentGateway: 支払いを確定\nPaymentGateway --> WebApp: 支払い承認\nWebApp -> Customer: 注文確認メッセージを表示\n\nWebApp -> Customer: ログアウト\n@enduml"
    },
    {
        "id": 3,
        "title": "電子メール送信のプロセス",
        "theme": "シーケンス図",
        "uml":"@startuml\nactor Customer\nparticipant EmailClient\nparticipant MailServer\nactor Recipient\n\nCustomer -> EmailClient: 電子メールを作成\nEmailClient -> EmailClient: メールの作成と編集\nEmailClient -> MailServer: メールを送信\nMailServer -> MailServer: メールの受信と転送\nMailServer -> Recipient: メールを受信\nRecipient --> MailServer: 受信確認\n\nCustomer -> EmailClient: ログアウト\n@enduml"
    },
    {
        "id":4,
        "title":"ブログプラットフォーム",
        "theme":"ユースケース図",
        "uml":"@startuml\nleft to right direction\n\nactor User as U\nactor Blogger as B\nactor Admin as A\nactor System as S\n\nrectangle BloggingPlatform {\n  U -- (Browse Blogs)\n  U -- (Read Blog)\n  U -- (Comment on Blog)\n\n  B -- (Create Blog)\n  B -- (Edit Blog)\n  B -- (Delete Blog)\n  B -- (Manage Comments)\n\n  A -- (Manage Blogs)\n  A -- (Manage Users)\n\n  S -- (Notify Users)\n}\n\nU --> (Login)\nU --> (Logout)\nU --> (Register)\n\nB --> (Login)\nB --> (Logout)\nB --> (Create Post)\nB --> (Edit Post)\nB --> (Delete Post)\nB --> (Manage Profile)\n\nA --> (Login)\nA --> (Logout)\nA --> (Manage System)\n@enduml"
    },
    {
        "id":5,
        "title":"航空予約システム",
        "theme":"ユースケース図",
        "uml":"@startuml\nleft to right direction\n\nactor Customer as C\nactor Administrator as Admin\nactor AirlineStaff as Staff\nactor System as S\n\nrectangle FlightReservationSystem {\n  C -- (Search Flights)\n  C -- (View Flight Details)\n  C -- (Book Flight)\n  C -- (Cancel Reservation)\n  C -- (View Reservation)\n\n  Admin -- (Manage Users)\n  Admin -- (Manage Flights)\n  Admin -- (Generate Reports)\n\n  Staff -- (Check-in Passengers)\n  Staff -- (Manage Flights)\n  Staff -- (Manage Reservations)\n  Staff -- (Process Payments)\n\n  S -- (Notify Customers)\n}\n\nC --> (Register)\nC --> (Login)\nC --> (Logout)\n\nAdmin --> (Login)\nAdmin --> (Logout)\nAdmin --> (Manage System)\n\nStaff --> (Login)\nStaff --> (Logout)\n\nC --> (Receive Confirmation Email)\nC --> (Receive Boarding Pass)\n\nStaff --> (Issue Boarding Pass)\n\nC --> (Receive Cancellation Confirmation)\n@enduml"
    },
    {
        "id":6,
        "title":"図書館管理システム",
        "theme":"ユースケース図",
        "uml":"@startuml\nleft to right direction\n\nactor LibraryUser as User\nactor LibraryStaff as Staff\nactor System as S\n\nrectangle LibraryManagementSystem {\n  User -- (Search Books)\n  User -- (View Book Details)\n  User -- (Check Out Book)\n  User -- (Return Book)\n  User -- (Renew Book)\n  User -- (View Due Dates)\n  User -- (Place Hold)\n  User -- (Pay Fine)\n\n  Staff -- (Add Book)\n  Staff -- (Remove Book)\n  Staff -- (Manage User Accounts)\n  Staff -- (Manage Loans)\n  Staff -- (Generate Reports)\n\n  S -- (Notify Overdue Users)\n}\n\nUser --> (Login)\nUser --> (Logout)\nUser --> (Register)\n\nStaff --> (Login)\nStaff --> (Logout)\nStaff --> (Manage System)\n\nUser --> (Receive Due Date Reminder)\nUser --> (Receive Hold Pickup Notice)\n\nStaff --> (Issue Library Card)\n\nUser --> (Receive Hold Available Notification)\n\nUser --> (Receive Fine Notice)\n\nUser --> (Receive Renewal Confirmation)\n@enduml"
    },
    {
        "id":7,
        "title":"ToDoリストアプリケーション",
        "theme":"クラス図",
        "uml":"@startuml\nclass Task {\n  -id: int\n  -title: string\n  -description: string\n  -dueDate: Date\n  -completed: boolean\n  +Task(id: int, title: string, description: string, dueDate: Date)\n  +getId(): int\n  +getTitle(): string\n  +getDescription(): string\n  +getDueDate(): Date\n  +isCompleted(): boolean\n  +markAsCompleted(): void\n}\n\nclass TaskList {\n  -tasks: List<Task>\n  +addTask(task: Task): void\n  +removeTask(task: Task): void\n  +getTasks(): List<Task>\n}\n\nclass User {\n  -id: int\n  -username: string\n  -email: string\n  +User(id: int, username: string, email: string)\n  +getId(): int\n  +getUsername(): string\n  +getEmail(): string\n}\n\nUser --> TaskList : Manages\nTaskList \"1\" -- \"*\" Task : Contains\n@enduml"
    },
    {
        "id":8,
        "title":"オンラインショピング",
        "theme":"クラス図",
        "uml":"@startuml\nclass User {\n  -userID: int\n  -username: string\n  -email: string\n  -password: string\n  -cart: Cart\n  +User(userID: int, username: string, email: string)\n  +addToCart(product: Product, quantity: int): void\n  +removeFromCart(product: Product, quantity: int): void\n  +viewCart(): Cart\n  +placeOrder(): Order\n}\n\nclass Product {\n  -productID: int\n  -name: string\n  -description: string\n  -price: double\n  +Product(productID: int, name: string, description: string, price: double)\n}\n\nclass Cart {\n  -cartID: int\n  -items: Map<Product, int>\n  +addToCart(product: Product, quantity: int): void\n  +removeFromCart(product: Product, quantity: int): void\n  +getCartItems(): Map<Product, int>\n}\n\nclass Order {\n  -orderID: int\n  -user: User\n  -orderDate: Date\n  -items: Map<Product, int>\n  -totalAmount: double\n  -status: string\n  +Order(user: User, orderDate: Date)\n  +addOrderItem(product: Product, quantity: int): void\n  +calculateTotalAmount(): double\n  +confirmOrder(): void\n}\n\nclass Payment {\n  -paymentID: int\n  -order: Order\n  -amount: double\n  -paymentDate: Date\n  -status: string\n  +Payment(order: Order, amount: double, paymentDate: Date)\n  +processPayment(): void\n}\n\nUser --> Cart : Uses\nUser --> Order : Places\nOrder --> Product : Contains\nPayment --> Order : For\n@enduml"
    },
    {
        "id":9,
        "title":"図書館管理システム",
        "theme":"クラス図",
        "uml":"@startuml\nabstract class Item {\n  -id: int\n  -title: string\n  -year: int\n  +Item(id: int, title: string, year: int)\n  +getId(): int\n  +getTitle(): string\n  +getYear(): int\n  +abstract getDetails(): string\n}\n\nclass Book {\n  +Book(id: int, title: string, year: int, author: string)\n  +getAuthor(): string\n  +getDetails(): string\n}\n\nclass DVD {\n  +DVD(id: int, title: string, year: int, director: string)\n  +getDirector(): string\n  +getDetails(): string\n}\n\nclass Library {\n  -items: List<Item>\n  +Library()\n  +addItem(item: Item): void\n  +removeItem(item: Item): void\n  +listItems(): List<Item>\n}\n\nclass Patron {\n  -id: int\n  -name: string\n  -checkedOutItems: List<Item>\n  +Patron(id: int, name: string)\n  +checkOutItem(item: Item): void\n  +returnItem(item: Item): void\n}\n\nItem <|-- Book\nItem <|-- DVD\nLibrary o-- Item : Composition\nPatron *-- Item : Aggregation\n@enduml"
    },
    {
        "id":10,
        "title":"オンラインショッピングサイトの購入プロセス",
        "theme":"アクティビティ図",
        "uml":"@startuml\nstart\n:Choose Product;\nif (Product Selected) then (yes)\n  :Add to Cart;\n  if (Cart Contains Items) then (yes)\n    :View Cart;\n    if (Proceed to Checkout) then (yes)\n      :Enter Shipping Address;\n      :Select Payment Method;\n      if (Payment Successful) then (yes)\n        :Place Order;\n        if (Order Confirmed) then (yes)\n          :Generate Invoice;\n          :Send Confirmation Email;\n        else (no)\n          :Display Error Message;\n        endif\n      else (no)\n        :Display Payment Error;\n      endif\n    else (no)\n      :Continue Shopping;\n    endif\n  else (no)\n    :Continue Shopping;\n  endif\nelse (no)\n  :Continue Browsing;\nendif\nstop\n@enduml"
    },
    {
        "id":11,
        "title":"タスク管理プロセス",
        "theme":"アクティビティ図",
        "uml":"@startuml\nstart\n:Create Task;\nif (Task Created) then (yes)\n  :Assign Task;\n  if (Assigned to User) then (yes)\n    :Track Progress;\n    if (Progress Updated) then (yes)\n      :Review Progress;\n      if (Progress Approved) then (yes)\n        :Complete Task;\n        if (Task Completed) then (yes)\n          :Send Notification;\n        else (no)\n          :Display Error Message;\n        endif\n      else (no)\n        :Request Revision;\n      endif\n    else (no)\n      :Continue Tracking;\n    endif\n  else (no)\n    :Assign to User;\n  endif\nelse (no)\n  :Continue Creating;\nendif\nstop\n@enduml"
    },
    {
        "id":12,
        "title":"ソフトウェア開発プロジェクトのライフサイクル",
        "theme":"アクティビティ図",
        "uml":"@startuml\nstart\n:Gather Requirements;\nif (Requirements Gathered) then (yes)\n  :Design Architecture;\n  :Develop Code;\n  if (Code Development Completed) then (yes)\n    :Perform Unit Testing;\n    if (Unit Testing Passed) then (yes)\n      :Integrate Components;\n      :Perform System Testing;\n      if (System Testing Passed) then (yes)\n        :Prepare Documentation;\n        :User Acceptance Testing;\n        if (UAT Passed) then (yes)\n          :Deploy to Production;\n          if (Deployment Successful) then (yes)\n            :Monitor and Maintain;\n            :End Project;\n          else (no)\n            :Handle Deployment Issues;\n          endif\n        else (no)\n          :Revise Software;\n        endif\n      else (no)\n        :Resolve System Issues;\n      endif\n    else (no)\n      :Fix Code Defects;\n    endif\n  else (no)\n    :Continue Development;\n  endif\nelse (no)\n  :Review Requirements;\nendif\nstop\n@enduml"
    },
    {
        "id":13,
        "title":"ユーザー管理システム",
        "theme":"状態図",
        "uml":"@startuml\n[*] --> Inactive : User Registration\nInactive --> Active : Activate User\nActive --> Locked : Lock User Account\nActive --> Inactive : Deactivate User\nLocked --> Active : Unlock User Account\nLocked --> Inactive : Deactivate User\nInactive --> Deleted : Delete User\nActive --> Deleted : Delete User\nLocked --> Deleted : Delete User\nDeleted --> [*] : Remove User from System\n@enduml"
    },
    {
        "id":14,
        "title":"ATMシステム",
        "theme":"状態図",
        "uml":"@startuml\n[*] --> Idle : Startup\nIdle --> CardInserted : Insert Card\nCardInserted --> PinEntry : Enter PIN\nPinEntry --> TransactionSelection : Correct PIN\nPinEntry --> CardEjected : Incorrect PIN (3 Attempts)\nTransactionSelection --> BalanceInquiry : Select Balance Inquiry\nTransactionSelection --> Withdrawal : Select Withdrawal\nTransactionSelection --> Deposit : Select Deposit\nBalanceInquiry --> TransactionComplete : View Balance\nWithdrawal --> TransactionComplete : Withdraw Cash\nDeposit --> TransactionComplete : Deposit Funds\nTransactionComplete --> CardEjected : Eject Card\nTransactionComplete --> Idle : Return to Idle\nCardEjected --> Idle : Remove Card\n@enduml"
    },
    {
        "id":15,
        "title":"オンライン予約システム",
        "theme":"状態図",
        "uml":"@startuml\n[*] --> Idle : System Start\n\nstate Idle {\n  [*] --> Available : Event Created\n  Available --> Full : Tickets Sold Out\n  Available --> Cancelled : Event Cancelled\n  Available --> Reserved : Reserve Ticket\n  Reserved --> Available : Cancel Reservation\n  Reserved --> Booked : Confirm Reservation\n}\n\nstate Full {\n  Full --> Available : Tickets Available\n}\n\nstate Cancelled {\n  Cancelled --> Archived : Archive Event\n}\n\nstate Booked {\n  Booked --> CheckedIn : Check In\n  CheckedIn --> Attended : Attend Event\n  CheckedIn --> NoShow : Mark as No-Show\n  NoShow --> Attended : Attend Event\n  Attended --> Archived : Archive Event\n  Attended --> CheckedIn : Check In Again\n  Attended --> NoShow : Mark as No-Show Again\n}\n\nstate Attended {\n  Attended --> Archived : Archive Event\n}\n\nstate Archived {\n  Archived --> [*] : Remove Event from System\n}\n\n@enduml"
    },
    {
        "id":16,
        "title":"旅行計画",
        "theme":"マインドマップ",
        "uml":"@startmindmap\n* Trip Planning\n** Destination\n*** Choose Destination\n*** Research Attractions\n** Transportation\n*** Flight Booking\n*** Accommodation\n** Itinerary\n*** Daily Schedule\n*** Places to Visit\n** Packing\n*** Clothing\n*** Essentials\n** Budget\n*** Expenses\n*** Currency Exchange\n@endmindmap"
    },
    {
        "id":17,
        "title":"プログラミング言語",
        "theme":"マインドマップ",
        "uml":"@startmindmap\n* Programming Languages\n** High-Level Languages\n*** General-Purpose\n**** Java\n**** Python\n**** C#\n**** Ruby\n*** Web Development\n**** JavaScript\n**** PHP\n**** Ruby on Rails\n**** TypeScript\n*** Data Science\n**** R\n**** Julia\n**** MATLAB\n** Low-Level Languages\n*** Assembly Language\n*** C\n*** C++\n*** Rust\n** Scripting Languages\n*** Bash\n*** PowerShell\n*** Perl\n*** Lua\n** Functional Languages\n*** Haskell\n*** Scala\n*** Erlang\n** Domain-Specific Languages\n*** SQL\n*** HTML/CSS\n*** LaTeX\n*** VHDL\n** Legacy Languages\n*** COBOL\n*** Fortran\n*** Ada\n@endmindmap"
    },
    {
        "id":18,
        "title":"ソフトウェアエンジニアリング",
        "theme":"マインドマップ",
        "uml":"@startmindmap\n* Software Engineering Project\n** Requirements\n*** Functional Requirements\n*** Non-functional Requirements\n** Design\n*** Architecture\n*** Database Schema\n*** User Interface\n** Development\n*** Coding\n*** Testing\n*** Debugging\n** Deployment\n*** Server Setup\n*** Deployment Process\n** Documentation\n*** User Manual\n*** Technical Documentation\n@endmindmap"
    },
    {
        "id":19,
        "title":"タスクの進捗状況",
        "theme":"ガントチャート",
        "uml":"@startgantt\n[foo] lasts 21 days\n[foo] is 40% completed\n[bar] lasts 30 days and is 10% complete\n@endgantt"
    },
    {
        "id":20,
        "title":"日付指定のマイルストーン",
        "theme":"ガントチャート",
        "uml":"@startgantt\nlanguage ja\n\nProject starts 2020-07-01\n[プロトタイプをテスト] lasts 10 days\n[プロトタイプが完成] happens 2020-07-10\n[製造ラインの準備] lasts 12 days\n[製造ラインの準備] starts at [プロトタイプをテスト]'s end\n@endgantt"
    },
    {
        "id":21,
        "title":"週ごとのタスク設定",
        "theme":"ガントチャート",
        "uml":"@startgantt\nprintscale weekly\nsaturday are closed\nsunday are closed\n\nProject starts the 1st of january 2021\n[プロトタイプ設計完了] as [TASK1] lasts 19 days\n[TASK1] is colored in Lavender/LightBlue\n[テスト] lasts 14 days\n[TASK1]->[テスト]\n\n2021-01-18 to 2021-01-22 are named [完了審査会]\n2021-01-18 to 2021-01-22 are colored in salmon \n@endgantt"
    }
]